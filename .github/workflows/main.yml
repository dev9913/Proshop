name: Docker CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: 'Docker image tag (like v1 , v1.2, v2 etc.)'
        required: false
        default: 'v1'

jobs:
  sonar-scan:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.4.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    env:
      BACKEND_IMAGE: dev7878/proshop-backend
      FRONTEND_IMAGE: dev7878/proshop-frontend
      TAG: ${{ github.event.inputs.IMAGE_TAG != '' && github.event.inputs.IMAGE_TAG || 'v1' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend Docker image
        working-directory: ./backend
        run: |
          docker build -t $BACKEND_IMAGE:$TAG .
          docker tag $BACKEND_IMAGE:$TAG $BACKEND_IMAGE:latest

      - name: Build Frontend Docker image
        working-directory: ./frontend
        run: |
          docker build -t $FRONTEND_IMAGE:$TAG .
          docker tag $FRONTEND_IMAGE:$TAG $FRONTEND_IMAGE:latest

      - name: Push Backend Docker image
        run: |
          docker push $BACKEND_IMAGE:$TAG
          docker push $BACKEND_IMAGE:latest

      - name: Push Frontend Docker image
        run: |
          docker push $FRONTEND_IMAGE:$TAG
          docker push $FRONTEND_IMAGE:latest

      - name: Scan Backend Docker images with Trivy
        run: |
          trivy image --exit-code 1 --ignore-unfixed --format table $BACKEND_IMAGE:$TAG
          # trivy image --exit-code 1 --ignore-unfixed --format table $BACKEND_IMAGE:latest

      - name: Scan Frontend Docker images with Trivy
        run: |
          trivy image --exit-code 1 --ignore-unfixed --format table $FRONTEND_IMAGE:$TAG
          # trivy image --exit-code 1 --ignore-unfixed --format table $FRONTEND_IMAGE:latest
          
